DESCRIPTION

This program computes the first and second moment of the largest avalanche in a sample of time series as a function of the temporal resolution used to define an avalanche.


Results of the systematic analysis of time series generated by several different systems are reported in

XXX

Please acknowledge the use of this software by citing the paper above.

The present code can also be used to replicate the results obtained in 

Percolation theory of self-exciting temporal processes
D. Notarmuzi, C. Castellano, A. Flammini, D. Mazzilli, and F. Radicchi
Phys. Rev. E 103, L020302 

To this aim, it is sufficient to replace the lines in which the time series is read from a file with a call to a function that fills the time series with event times generated by a model of point process. In the paper (Phys. Rev. E 103, L020302) we considered the Hawkes process and the Poisson process. Algorithms to simulate the Hawkes process are given in the supplementary materials of the paper (Phys. Rev. E 103, L020302). 

#################################

BASIC INSTRUCTIONS

To compile the program type "make". To run the program and perform the analysis, just type

./TS_phase_diag.out dataset

"dataset" is a string that specifies the name of the file containing the time series. 

#################################

DETAILS ABOUT THE INPUT/OUTPUT PARAMETERS AND FILES


The input file MUST be structured as follows:

Ka t1 t2 t3 \n
Kb t1 t2 t3 t4 t5 \n
.
.
.
Kn t1 t2 \n

where:

Ka, Kb,..., Kn is an integer specifying the number of events that compose the time series a, b,..., n respectively. In the example above we would have Ka=3, Kb=5, Kn=2.

t1 t2 ... is the time series, i.e., a sequence of chronologically ordered interevent times. The last interevent time, in our implementation, represents the distance between the end of the temporal window and the last event time. It thus does not represent an event and we associate a cluster of size 0 to it. If the last interevent must be considered, change line number 96 of the file `percolation_algorithm.c` from `cluster_size[K]=0;` to `cluster_size[K]=1`. The present implementation of the code assumes that the time series are stored in a file whose name is 

X_ts.txt

with X = dataset, the same string given in input. The code further assumes that the file is contained in the folder '..', i.e., the folder that contains the present folder. The code further assumes that the present folder contains the folder `res`, where results are stored. Results are stored in a file with name

X_PhaseDiag.txt

with X = dataset, the same string given in input. The results file contains three columns:

Temporal resolution
Average (over time series) of the size of the largest cluster
Average (over time series) of the square of the size of the largest cluster


#################################


EXAMPLE


To run the code on the WEIBO dataset, which we provide together with this code, type

./TS_phase_diag.out weibo

Results of the analysis will be printed in the file

weibo_PhaseDiag.txt

The percolation strength and the associated susceptibility can be plotted by means of the 
code "PhaseDiag_plot.py" which we also provide. The location of the maximum of the
susceptibility is the optimal resolution Delta^*.

To run the script PhaseDiag_plot.py, type

python PhaseDiag_plot.py dataset

where "dataset" "dataset" is the same string given in input to the code TS_phase_diag.c
We tested this script using python 3.?
This script will produce a plot named dataset_PhaseDiagram.png with the visualization of 
the percolation strength and the associated susceptibility as a function of the temporal 
resolution, in analogy with Figure 1 of the paper

XXX




